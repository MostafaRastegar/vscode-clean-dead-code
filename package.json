{
  "name": "clean-dead-code",
  "displayName": "CleanDeadCode",
  "description": "Remove unused imports and handle unused variables/functions while preserving code structure",
  "version": "0.1.6",
  "author": "Mostafa Rastegar <m.rastegar991@gmail.com>",
  "license": "MIT",
  "publisher": "MostafaRastegar",
  "icon": "icon.png",
  "galleryBanner": {
    "theme": "light",
    "color": "#FFFFFF"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/MostafaRastegar/vscode-clean-dead-code"
  },
  "engines": {
    "vscode": "^1.80.0"
  },
  "categories": [
    "Formatters",
    "Programming Languages"
  ],
  "activationEvents": [
    "onLanguage:javascript",
    "onLanguage:javascriptreact",
    "onLanguage:typescript",
    "onLanguage:typescriptreact"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "clean-code.removeUnusedImports",
        "title": "Clean Code: Remove Unused Imports"
      },
      {
        "command": "clean-code.handleUnusedVariables",
        "title": "Clean Code: Handle unused variables/functions"
      },
      {
        "command": "clean-code.cleanAll",
        "title": "Clean Code: Clean All (Imports + Variables)"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "when": "editorTextFocus && (resourceExtname == .js || resourceExtname == .jsx || resourceExtname == .ts || resourceExtname == .tsx)",
          "command": "clean-code.removeUnusedImports",
          "group": "1_modification"
        },
        {
          "when": "editorTextFocus && (resourceExtname == .js || resourceExtname == .jsx || resourceExtname == .ts || resourceExtname == .tsx)",
          "command": "clean-code.handleUnusedVariables",
          "group": "1_modification"
        },
        {
          "when": "editorTextFocus && (resourceExtname == .js || resourceExtname == .jsx || resourceExtname == .ts || resourceExtname == .tsx)",
          "command": "clean-code.cleanAll",
          "group": "1_modification"
        }
      ]
    },
    "configuration": {
      "title": "CleanDeadCode",
      "properties": {
        "cleanCode.autoRemoveUnusedImports": {
          "type": "boolean",
          "default": false,
          "description": "Automatically remove unused imports on file save"
        },
        "cleanCode.autoHandleUnusedVariables": {
          "type": "boolean",
          "default": false,
          "description": "Automatically handle unused variables/functions on file save"
        },
        "cleanCode.unusedVariableAction": {
          "type": "string",
          "enum": [
            "comment",
            "prefix",
            "ignore"
          ],
          "default": "comment",
          "description": "How to handle unused variables/functions (comment out with TODO, add _ prefix, or ignore)"
        },
        "cleanCode.removeTrailingParameters": {
          "type": "boolean",
          "default": true,
          "description": "Remove unused trailing parameters in functions (after the last used parameter)"
        }
      }
    },
    "keybindings": [
      {
        "command": "clean-code.removeUnusedImports",
        "key": "ctrl+alt+u",
        "mac": "cmd+alt+u",
        "when": "editorTextFocus && (resourceExtname == .js || resourceExtname == .jsx || resourceExtname == .ts || resourceExtname == .tsx)"
      },
      {
        "command": "clean-code.handleUnusedVariables",
        "key": "ctrl+alt+v",
        "mac": "cmd+alt+v",
        "when": "editorTextFocus && (resourceExtname == .js || resourceExtname == .jsx || resourceExtname == .ts || resourceExtname == .tsx)"
      },
      {
        "command": "clean-code.cleanAll",
        "key": "ctrl+alt+c",
        "mac": "cmd+alt+c",
        "when": "editorTextFocus && (resourceExtname == .js || resourceExtname == .jsx || resourceExtname == .ts || resourceExtname == .tsx)"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile",
    "lint": "eslint src -c ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/vscode": "^1.80.0",
    "@types/glob": "^8.1.0",
    "@types/mocha": "^10.0.1",
    "@types/node": "20.2.5",
    "@typescript-eslint/eslint-plugin": "^5.59.8",
    "@typescript-eslint/parser": "^5.59.8",
    "eslint": "^8.41.0",
    "glob": "^8.1.0",
    "mocha": "^10.2.0",
    "typescript": "^5.1.3",
    "@vscode/test-electron": "^2.3.2"
  },
  "dependencies": {
    "typescript": "^5.1.3"
  }
}
